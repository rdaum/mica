BUGS:

  strings and errors not being GCd.  god knows why.
  bugs in the various unserializers
  fix map operator to work with all binary operators, not just arithmetic
      involves rewriting how binary expressions are parsed

  some tasks won't like to be persistent.  i.e. special tasks like network + eval loop.  how to handle references to them so they won't persist?  If we don't fix this, it will crash.
  
For mica 0.9 
============

- native blocks + wrappers for all internal types

- Unicode characters in Var

- slot-name-expressions for verb selectors+prepositions

- db <-> text dump format utilities

- fix timeout/timing/ticking on tasks


For mica 0.9.x => 1.0
=====================

- optimizations and bug fixes

For mica 1.0.x => 1.1
=====================

- const vars
- lazy evaluation
- FFI, Extra utilities objects, bug fixes.  Regular expressions!
- clean up the VM suspension model
- suspendable/resumable/can-dispatch-from native methods.  Using makecontext/setcontext for native-code "fibres".  
- both syntax and compilation nodes become a kind fully persistent values, decompilation from syntax nodes
- call/cc operator
- clean up Pool/Pools interface in general


